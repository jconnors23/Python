with no parentheses, no stack is needed, we simply evaluate left to right 
need conditionality based on operands w/in string : mapping of methods per operand 


when we encounter a '(', we iterate L - > R until ), then slice expression and push to stack 
at final index, we evaluate each expression and increment/decrement returnal 


We can treat each group of parentheses as an expression to be evaluated in LIFO order
our stack will have expressions of valid parantheses, 
we have to iterate left to right, send each string e's w/in () to stack then evaluate afterwards? 


(1+(4+5+2)-3)+(6+8)
